plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'

	/**
	 * springdoc
	 *
	 * URL
	 * - https://springdoc.org/
	 * Main 用途
	 * - OpenAPI 仕様に基づいたドキュメントを生成する
	 * Sub 用途
	 * - なし
	 * 概要
	 * コードから OpenAPI 仕様に基づいたドキュメントの生成ライブラリ
	 */
	id("org.springdoc.openapi-gradle-plugin") version "1.8.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	/**
	 * AssertJ
	 *
	 * URL
	 * - https://assertj.github.io/doc/
	 * MavenCentral
	 * - https://mvnrepository.com/artifact/org.assertj/assertj-core
	 * Main用途
	 * - JUnitでassertThat(xxx).isEqualTo(yyy)みたいな感じで比較時に使う
	 * Sub用途
	 * - 特になし
	 * 概要
	 * - JUnit等を直感的に利用するためのライブラリ
	 */
	testImplementation("org.assertj:assertj-core:3.25.2")

	/**
	 * jqwik
	 *
	 * URL
	 * - https://jqwik.net/
	 * MavenCentral
	 * - https://mvnrepository.com/artifact/net.jqwik/jqwik
	 * - https://mvnrepository.com/artifact/net.jqwik/jqwik-kotlin
	 * Main用途
	 * - Property Based Testing(pbt)
	 * 概要
	 * - Property Based Testingをするのに便利なライブラリ
	 * 参考
	 * - https://medium.com/criteo-engineering/introduction-to-property-based-testing-f5236229d237
	 * - https://johanneslink.net/property-based-testing-in-kotlin/#jqwiks-kotlin-support
	 */
	testImplementation("net.jqwik:jqwik:1.8.2")
	testImplementation("net.jqwik:jqwik-kotlin:1.8.2")

	/**
	 * Spring Boot Starter Validation
	 *
	 * MavenCentral
	 * - https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
	 * Main用途
	 * - コントローラーのバリデーションのために利用する
	 * Sub用途
	 * - 無し
	 * 概要
	 * - Validation を実装した際に、本ライブラリがなければ、バリデーションが動作しない
	 */
	implementation("org.springframework.boot:spring-boot-starter-validation")

	/**
	 * springdoc の gradle 拡張
	 *
	 * 概要
	 * - CLI から springdoc を利用して OpenAPI を 生成する
	 */
	implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0")

	/**
	 * Spring JDBC
	 *
	 * URL
	 * - https://spring.pleiades.io/spring-framework/docs/current/javadoc-api/org/springframework/jdbc/core/package-summary.html
	 * MavenCentral
	 * - https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-jdbc
	 * Main用途
	 * - DBへ保存
	 * 概要
	 * - 特になし
	 *
	 * これを入れるだけで、application.properties/yamlや@ConfigurationによるDB接続設定が必要になる
	 */
	implementation("org.springframework.boot:spring-boot-starter-jdbc")

	/**
	 * postgresql
	 *
	 * URL
	 * - https://jdbc.postgresql.org/
	 * MavenCentral
	 * - https://mvnrepository.com/artifact/org.postgresql/postgresql
	 * Main用途
	 * - DBつなぐ時のドライバ
	 * 概要
	 * - 特になし
	 */
	implementation("org.postgresql:postgresql")
}

tasks.named('test') {
	useJUnitPlatform()
}

openApi {
	apiDocsUrl.set("http://localhost:8080/v3/api-docs.yaml")
	outputDir.set(project.layout.buildDirectory.dir("springdoc"))
	outputFileName.set("openapi.yaml")
}
